ï¿½
iE:\Scoala\Anul III\Sem I\i.Net\Project\Microservices\Alarms\Api\Controllers\AlarmsController.cs
	namespace 	
Api
 
. 
Controllers 
{ 
[ 
Route 

(
 
$str 
)  
]  !
public		 

class		 !
AlarmsController		 &
:		' (

Controller		) 3
{

 
private 
readonly 
IAlarmsService ,
_alarmsService- @
;@ A
public !
AlarmsController $
($ %
IAlarmsService% 8
alarmsService9 K
)K L
{ 	
_alarmsService 
=  !
alarmsService" 4
;4 5
} 	
[ 	
HttpGet	 
] 
public 
IActionResult 
GetAll #
(# $
)$ %
{ 	
var 
results 
= 
_alarmsService -
.- .$
GetAllAlarmsRecords. F
(F G
)G H
;H I
return 
Ok 
( 
results 
) 
; 
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
IActionResult 
	GetByUser &
(& '
Guid' +
userId, 2
)2 3
{ 	
if 
( 
userId 
== 
Guid 
. 
Empty $
)$ %
{ 
return 

BadRequest !
(! "
)" #
;# $
}   
var"" 
result"" 
="" 
_alarmsService"" ,
."", -%
GetUserAlarmsRecords""- F
(""F G
userId""G M
)""M N
;""N O
return$$ 
Ok$$ 
($$ 
result$$ 
)$$ 
;$$ 
}%% 	
['' 	
HttpPost''	 
]'' 
public(( 
IActionResult(( 
Create(( #
(((# $
[(($ %
FromBody((% -
]((- .#
AddAlarmsRecordDto((/ F
record((G M
)((M N
{)) 	
if** 
(** 
!** 

ModelState** 
.** 
IsValid** #
)**# $
{++ 
return,, 

BadRequest,, !
(,,! "
),," #
;,,# $
}-- 
var// 
id// 
=// 
_alarmsService// (
.//( ) 
AddAlarmsRecord//) =
(//= >
record//> D
)//D E
;//E F
return11 
Created11 
(11 
$str11 0
+111 2
id113 5
,115 6
id117 9
)119 :
;11: ;
}22 	
}33 
}44 ï¿½
OE:\Scoala\Anul III\Sem I\i.Net\Project\Microservices\Alarms\Api\Program.cs
	namespace		 	
Api		
 
{

 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
var 
host 
= 
BuildWebHost #
(# $
args$ (
)( )
;) *
using 
( 
var 
scope 
= 
host #
.# $
Services$ ,
., -
CreateScope- 8
(8 9
)9 :
): ;
{ 
var 
services 
= 
scope $
.$ %
ServiceProvider% 4
;4 5
try 
{ 
var 
context 
=  !
services" *
.* +
GetRequiredService+ =
<= >
DatabaseContext> M
>M N
(N O
)O P
;P Q
DbInitializer !
.! "
Seed" &
(& '
context' .
). /
;/ 0
} 
catch 
( 
	Exception  
ex! #
)# $
{ 
var 
logger 
=  
services! )
.) *
GetRequiredService* <
<< =
ILogger= D
<D E
ProgramE L
>L M
>M N
(N O
)O P
;P Q
logger 
. 
LogError #
(# $
ex$ &
,& '
$str( W
)W X
;X Y
} 
} 
host   
.   
Run   
(   
)   
;   
}!! 	
public## 
static## 
IWebHost## 
BuildWebHost## +
(##+ ,
string##, 2
[##2 3
]##3 4
args##5 9
)##9 :
=>##; =
WebHost$$ 
.$$  
CreateDefaultBuilder$$ (
($$( )
args$$) -
)$$- .
.%% 

UseStartup%% 
<%% 
Startup%% #
>%%# $
(%%$ %
)%%% &
.&& 
Build&& 
(&& 
)&& 
;&& 
}'' 
}(( ï¿½
OE:\Scoala\Anul III\Sem I\i.Net\Project\Microservices\Alarms\Api\Startup.cs
	namespace 	
Api
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddTransient !
<! "
IDatabaseContext" 2
,2 3
DatabaseContext4 C
>C D
(D E
)E F
;F G
services 
. 
AddTransient !
<! "
IAlarmsService" 5
,5 6
AlarmsService7 I
>I J
(J K
)K L
;L M
services 
. 
AddTransient !
<! ""
IAlarmsRepository" 8
,8 9!
AlarmsRepository: O
>O P
(P Q
)Q R
;R S
var   

connection   
=   
Configuration   *
.  * +
GetConnectionString  + >
(  > ?
$str  ? R
)  R S
;  S T
services!! 
.!! 
AddDbContext!! !
<!!! "
DatabaseContext!!" 1
>!!1 2
(!!2 3
options!!3 :
=>!!; =
options!!> E
.!!E F
UseSqlServer!!F R
(!!R S

connection!!S ]
)!!] ^
)!!^ _
;!!_ `
services## 
.## 
AddMvc## 
(## 
)## 
.## 
AddFluentValidation## 1
(##1 2
fv##2 4
=>##5 7
fv##8 :
.##: ;4
(RegisterValidatorsFromAssemblyContaining##; c
<##c d+
AddAlarmsRecordValidation	##d ï¿½
>
##ï¿½ ï¿½
(
##ï¿½ ï¿½
)
##ï¿½ ï¿½
)
##ï¿½ ï¿½
;
##ï¿½ ï¿½
services%% 
.%% 
AddSwaggerGen%% "
(%%" #
c%%# $
=>%%% '
{&& 
c'' 
.'' 

SwaggerDoc'' 
('' 
$str'' !
,''! "
new''# &
Info''' +
{'', -
Title''. 3
=''4 5
$str''6 P
,''P Q
Version''R Y
=''Z [
$str''\ `
}''a b
)''b c
;''c d
}(( 
)(( 
;(( 
services** 
.** 
AddAutoMapper** "
(**" #
)**# $
;**$ %
}++ 	
public.. 
void.. 
	Configure.. 
(.. 
IApplicationBuilder.. 1
app..2 5
,..5 6
IHostingEnvironment..7 J
env..K N
)..N O
{// 	
if11 
(11 
env11 
.11 
IsDevelopment11 !
(11! "
)11" #
)11# $
{22 
app44 
.44 

UseSwagger44 
(44 
)44  
;44  !
app77 
.77 
UseSwaggerUI77  
(77  !
c77! "
=>77# %
{88 
c99 
.99 
SwaggerEndpoint99 %
(99% &
$str99& @
,99@ A
$str99B \
)99\ ]
;99] ^
}:: 
):: 
;:: 
app<< 
.<< %
UseDeveloperExceptionPage<< -
(<<- .
)<<. /
;<</ 0
}== 
app?? 
.?? 
UseMvc?? 
(?? 
)?? 
;?? 
}@@ 	
}AA 
}BB ï¿½

rE:\Scoala\Anul III\Sem I\i.Net\Project\Microservices\Alarms\Api\Validations\AddAlarmsRecordValidation.cs
	namespace 	
Api
 
. 
Validations 
{ 
public 

class *
AddAlarmsRecordValidation /
:0 1
AbstractValidator2 C
<C D#
AddAlarmsRecordDtoD [
>[ \
{ 
public		 *
AddAlarmsRecordValidation		 -
(		- .
)		. /
{

 	
RuleFor 
( 
x 
=> 
x 
. 
UserId !
)! "
." #
NotEmpty# +
(+ ,
), -
;- .
RuleFor 
( 
x 
=> 
x 
. 
Value  
)  !
.! "
InclusiveBetween" 2
(2 3
-3 4
$num4 8
,8 9
$num: >
)> ?
;? @
RuleFor 
( 
x 
=> 
x 
. 
Time 
)  
.  !
LessThanOrEqualTo! 2
(2 3
DateTime3 ;
.; <
Now< ?
)? @
;@ A
} 	
} 
} 